/* editor-style.css */

body.sticky-footer-layout > .main-header {
    justify-content: space-between; /* 양쪽 정렬 유지 */
    align-items: center;
    background-color: transparent; /* 배경색을 없애서 본문과 어우러지게 */
    border-bottom: 1px solid var(--border-color); /* 구분선 추가 */
    padding: 10px 15px; /* editor-container의 padding과 동일하게 맞춤! */
    color: var(--text-secondary-color);
    position: sticky; /* 스크롤 영역에 붙어있게 함 */
    top: 0;
    z-index: 100;
}

body.sticky-footer-layout > .main-header a {
    color: var(--text-secondary-color); /* 링크 색상도 통일 */
    font-weight: normal; /* 너무 굵지 않게 */
}

.header-center {
    flex-grow: 1; /* 남는 공간을 모두 차지하여 중앙에 위치하게 함 */
    text-align: center; /* 내부 텍스트(제목)를 중앙 정렬 */
    /* 제목이 길어질 경우를 대비 */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

/* 새로 추가: 오른쪽 섹션 스타일 */
.header-right {
    display: flex;
    gap: 8px; /* 버튼들 사이의 간격 */
}

.floating-copy-btn {
    position: sticky;  /* 스크롤 시 상단에 붙어있게 함 */
    top: 10px;         /* 상단에서 10px 떨어진 위치 */
    float: right;      /* 오른쪽으로 띄움 */
    z-index: 50;       /* 헤더보다는 아래, 본문보다는 위에 있도록 */
    background-color: var(--surface-color); /* 배경과 섞이지 않게 */
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
}

.editor-container {
    max-width: 800px;
    width: 100%;
    margin: 20px auto;
    padding: 0 15px;
}

/* ----------------------------------
   1. 제목 및 아이콘 버튼 영역
   ---------------------------------- */

.title-input {
    flex-grow: 1; 
    border: none;
    background-color: transparent;
    padding: 10px;
    font-size: 24px; /* 모바일도 고려해서 살짝 줄임 */
    font-weight: bold;
    outline: none;
    /* 최소 너비를 지정해서 아이콘이 밀려나지 않게 함 */
    min-width: 0; 
}

/* 제목 입력창과 보기 제목 스타일 조정 */
.title-input, .view-title {
    width: 100%; /* 부모(.header-center) 너비에 맞춤 */
    padding: 10px 0; /* 위아래 여백만 줌 */
    margin: 0;
    font-size: 20px; /* 화면에 맞게 약간 조정 */
    font-weight: bold;
    border: none;
    background-color: transparent;
    text-align: center; /* 이것도 중앙정렬! */
}
.title-input:focus {
    outline: none;
}

.title-actions {
    display: flex;
    padding: 10px 0;
    gap: 8px;
}

/* 모든 아이콘 버튼의 공통 스타일 */
.action-btn {
    padding: 8px;
    background-color: transparent;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.2s;
    font-size: 22px; /* 아이콘 크기 키우기 */
    line-height: 1; /* 아이콘이 수직 중앙에 오도록 함 */
}

/* 아이콘 버튼에 마우스를 올렸을 때 */
.action-btn:hover {
    background-color: var(--background-color);
}

/* ----------------------------------
   2. 본문 영역
   ---------------------------------- */
.content-section {
    position: relative;
    margin-top: 15px;
}


.content-textarea {
    width: 100%;
    /* height는 JS가 조절하므로 최소 높이만 남깁니다 */
    min-height: 60vh; 
    padding: 20px;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    background-color: var(--surface-color);
    font-size: 16px;
    line-height: 1.7;
    font-family: inherit;
    touch-action: pan-y;
    overflow-y: hidden;
}

/* ----------------------------------
   3. 에디터 정보 영역 (글자 수 카운터 등)
   ---------------------------------- */
.editor-info {
    margin-top: 10px; /* 본문 입력창과의 간격 */
    padding: 0 5px;   /* 좌우에 미세한 여백 */
    text-align: right;
}

#char-counter {
    font-size: 14px;
    color: var(--text-secondary-color); /* 연한 회색 글씨 */
}



@media (max-width: 420px) {

    /* 1. 제목과 아이콘 영역을 위아래로 쌓이게 변경 */
    .title-section {
        align-items: flex-start; /* 왼쪽 정렬로 초기화 */
    }

    /* 2. 제목 입력창은 꽉 차게 */
    .title-input {
        width: 100%;
        font-size: 22px; /* 작은 화면에서는 제목 폰트 살짝 줄이기 */
    }

    /* 4. 본문 입력창 폰트도 살짝 줄여주기 */
    .content-textarea {
        font-size: 15px;
    }
}

/* =======================================
   읽기 모드(View Mode) 전용 스타일 수정
   ======================================= */

/* 읽기 모드 제목 h2 스타일 */
.view-title {
    flex-grow: 1;
    font-size: 24px;
    font-weight: bold;
    padding: 10px 0; /* 위아래 여백만 주고 좌우는 없애서 자연스럽게 */
    margin: 0;
    min-width: 0;
}

/* 읽기 모드 본문 div 스타일 */
.view-content {
    width: 100%;
    min-height: 60vh; 
    padding: 5px; /* 패딩을 조정해 답답한 느낌을 없앱니다. */
    font-size: 16px;
    line-height: 1.5;
    white-space: pre-wrap; /* 줄바꿈과 공백 표시는 매우 중요하므로 유지! */
    word-wrap: break-word; /* 긴 단어 자동 줄바꿈도 유지! */
}

/* =======================================
   마크다운 렌더링 결과물 스타일
   ======================================= */

/* 마크다운으로 추가된 모든 이미지에 적용될 스타일 */
.view-content img {
    max-width: 100%;
    height: auto;
    display: block;
    margin-top: 16px;
    margin-bottom: 16px;
    margin-left: auto;
    margin-right: auto;
}

/* 스타일은 .view-content 안에서만 적용되도록 한정합니다. */
.view-content h1,
.view-content h2,
.view-content h3,
.view-content h4,
.view-content h5,
.view-content h6 {
    margin-block-end: -0.67em;
}

.view-content h1 { font-size: 1.5em; }
.view-content h2 { font-size: 1.3em; }
.view-content h3 { font-size: 1.1em; }

.view-content ul,
.view-content ol{
    display: flex;
    flex-direction: column;
    padding-left: 16px;
}

.view-content em {
    font-style: normal;
    color: #777;
}

.view-content blockquote {
    margin: 0 0 16px 0;
    padding: 0 1em;
    color: var(--text-secondary-color);
    border: 2px solid var(--background-color);
    border-left: 0.25em solid var(--border-color);
    background-color: #E6F2FFf;
}

.view-content pre {
    background-color: #636363;
    color: #fff; /* 연한 회색 배경 */
    border-radius: 6px;
    padding: 16px;
    margin-bottom: 16px;
    white-space: pre-wrap;    /* 1. 공백/들여쓰기는 유지하되, 필요하면 자동 줄바꿈 허용 */
    overflow-x: hidden; 
}

.view-content pre code {
    font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace;
    font-size: 85%;
    background-color: transparent;
    padding: 0;
}

.view-content hr {
    height: 0.25em;
    padding: 0;
    margin: 24px 0;
    background-color: var(--border-color);
    border: 0;
}

/* =======================================
   드롭다운 메뉴 스타일
   ======================================= */

/* 메뉴 전체를 감싸는 컨테이너 */
.dropdown-menu-container {
    position: relative; /* 자식 요소인 드롭다운 메뉴의 위치 기준점이 됩니다. */
    display: inline-block; /* 다른 버튼 옆에 나란히 있도록 합니다. */
}

/* 실제로 나타나는 드롭다운 메뉴의 스타일 */
.dropdown-content {
    /* 평소엔 안 보이게 처리했다가, JS로 'show' 클래스가 추가되면 보이게 할 수 있습니다. */
    /* 하지만 여기서는 hidden 속성을 사용했으므로 JS로 직접 제어합니다. */
    position: absolute; /* 컨테이너를 기준으로 자유롭게 위치를 잡습니다. */
    right: 0; /* 컨테이너의 오른쪽에 붙입니다. */
    background-color: var(--surface-color);
    min-width: 120px; /* 메뉴가 너무 좁아 보이지 않게 최소 너비를 줍니다. */
    border: 1px solid var(--border-color);
    border-radius: 8px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.1);
    z-index: 1; /* 다른 요소들 위에 보이도록 합니다. */
    overflow: hidden; /* border-radius가 내부 요소에도 적용되게 합니다. */
    text-align: center;
}

/* 드롭다운 메뉴 안의 각 항목 (수정, 삭제 링크) */
.dropdown-content a {
    color: var(--text-primary-color);
    padding: 12px 16px;
    text-decoration: none;
    display: block; /* 링크가 한 줄 전체를 차지하게 만들어 클릭하기 쉽게 합니다. */
    font-size: 15px;
    transition: background-color 0.2s;
}

/* 메뉴 항목에 마우스를 올렸을 때 */
.dropdown-content a:hover {
    background-color: var(--background-color);
}

/* '삭제'와 같이 위험한 동작을 나타내는 항목 스타일 */
.dropdown-content a.danger:hover {
    background-color: #ffdddd; /* 붉은 계열 배경으로 경고의 의미를 줍니다. */
    color: #d32f2f;
}

.dropdown-content a.textdown:hover{
    background-color: #e3f6ff;
}
